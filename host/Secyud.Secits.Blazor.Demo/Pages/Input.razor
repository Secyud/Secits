@attribute [Route(Menu.Input)]
<style>
    .group {
        display: grid;
        grid-template-columns: repeat(9, 1fr); /* 自适应列数 */
        grid-gap: 0.5rem;        
    }
</style>

@{
    foreach (var shadow in Bool)
    foreach (var angular in Bool)
    foreach (var rounded in Bool)
    foreach (var borderless in Bool)
    foreach (var backless in Bool)
    {
        <SCard>
            <SCardHeader>
                @(shadow ? "有阴影" : "无阴影")
                @(angular ? "直角" : "圆角")
                @(rounded ? "图标" : "按钮")
                @(borderless ? "无边" : "有边")
                @(backless ? "无背景" : "有背景")
            </SCardHeader>
            <SCardBody Class="group">
                @foreach (var size in Sizes)
                {
                    <label>@size</label>
                    foreach (var theme in Themes)
                    {
                        <SInputText Value="@(theme.ToString())"
                                    Theme="theme" Size="size" Shadow="shadow" Angular="angular"
                                    Rounded="rounded" Borderless="borderless" Background="backless"
                                    ShowClearButton/>
                    }
                }
            </SCardBody>
        </SCard>
    }
}

@code
{
    Theme[] Themes { get; } =
    [
        Theme.Default, Theme.Primary, Theme.Secondary, Theme.Naive,
        Theme.Success, Theme.Info, Theme.Warning, Theme.Danger
    ];

    Size[] Sizes { get; } =
    [
        Size.XSmall, Size.Small, Size.Default, Size.Large, Size.XLarge
    ];

    bool[] Bool { get; } =
    [
        false, true
    ];
}