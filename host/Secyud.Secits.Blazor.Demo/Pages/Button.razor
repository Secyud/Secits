@attribute [Route(Menu.Button)]
@{
    foreach (var shadow in Shadow)
    foreach (var angular in Angular)
    foreach (var rounded in Rounded)
    {
        foreach (var style in Styles)
        {
            <SCard>
                <SCardHeader>
                    @(shadow == STheme.Default ? "无阴影" : "有阴影")
                    @(angular == STheme.Default ? "圆角" : "直角")
                    @(rounded == STheme.Default ? "按钮" : "图标")

                </SCardHeader>
                <SCardBody>
                    @foreach (var size in Sizes)
                    {
                        <br/>
                        foreach (var color in Colors)
                        {
                            var theme = shadow | angular | rounded | style | color | size;
                            <SButton Theme="@theme">@color</SButton>
                        }
                    }
                </SCardBody>
            </SCard>
        }
    }
}

@code
{
    STheme[] Colors { get; } =
    [
        STheme.Primary, STheme.Secondary, STheme.Success, STheme.Info,
        STheme.Warning, STheme.Danger, STheme.Light, STheme.Dark
    ];

    STheme[] Styles { get; } =
    [
        STheme.Default, STheme.Outlined, STheme.NoBorder
    ];

    STheme[] Sizes { get; } =
    [
        STheme.XSmall, STheme.Small, STheme.Default, STheme.Large, STheme.XLarge
    ];

    STheme[] Angular { get; } =
    [
        STheme.Default, STheme.Angular
    ];

    STheme[] Shadow { get; } =
    [
        STheme.Default, STheme.Shadow
    ];

    STheme[] Rounded { get; } =
    [
        STheme.Default, STheme.Rounded
    ];
}
